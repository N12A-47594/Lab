#include <iostream>
#include <cstdlib>
#include <time.h>
#include <fstream>
#include <string>


using namespace std;

int n;
int T[1];
string tab;

int generateArray(int T[], int n);
int sortArray(int T[], int n);
int averageValue(int T[], int n);
int maximumValue(int T[], int n);
int minimumValue(int T[]);
int printArray(int T[], int n);
string saveArray(int T[], int n);
string loadArray(int T[], int n);
int menu();

int main()
{

	menu();
	
}

int menu()										//Ojciec	
{
	int s;
	s = 0;
	while (s!=9)
	{
		cout<<endl;
		cout<<"MAIN MENU:"<<endl;
		cout<<"1.Nowa Tablica."<<endl;
		cout<<"2.Wczytaj Tablice."<<endl;
		cout<<"3.Zapisz Tablice."<<endl;
		cout<<"4.Sortuj Tablice."<<endl;
		cout<<"5.Pokaz srednia wartosc."<<endl;
		cout<<"6.Pokaz najmniejsza wartosc.(UWAGA! POSEGREGUJE TO TABLICE)"<<endl;
		cout<<"7.Pokaz najwieksza wartosc.(UWAGA! POSEGREGUJE TO TABLICE)"<<endl;
		cout<<"8.Pokaz Tablice."<<endl;
		cout<<"9.Wyjscie."<<endl;
		cin>>s;
		switch (s)
			{
				case 1:
				cout<<"Podaj rozmiar Tablicy"<<endl;
				cin>>n;
				T[n]= generateArray(T,n);
				break;
				case 2:
				loadArray(T,n);
				break;
				case 3:
				saveArray(T,n);
				break;
				case 4:
				T[n] = sortArray(T,n);
				break;
				case 5:
				averageValue(T,n);
				break;
				case 6:
				minimumValue(T);
				break;
				case 7:
				maximumValue(T,n);
				break;
				case 8:
				printArray(T,n);
				break;
				case 9:
				break;
				default:
				cout<<"Wybrano nieistniejaca opcje."<<endl;
				break;
			}
	}
}

int generateArray(int T[],int n)				//Matka
{	
	srand(time(NULL));
	for(int i=0; i<n; i++)
	{
		T[i] = rand()%100;
	}
	cout<<endl;
 }

int sortArray(int T[], int n)					//Pierworodna
{
	for (int j=0; j<n; j++)
	{
		for (int i=1; i<n; i++)
		{
			if (T[i-1]>T[i])
			{
				swap(T[i-1], T[i]);
			}
		}
	}
}

int averageValue(int T[], int n) 				//Malcolm
{
	int Suma, Srednia;
	for (int i=0;i<n;i++)
	{
		Suma += T[i];
	}
	
	Srednia = Suma/n;
	cout<<"Srednia: "<<Srednia<<endl;
}

int maximumValue(int T[], int n)				//Starsza Bliźniaczka
{
	for (int j=0; j<n; j++)
	{
		for (int i=1; i<n; i++)
		{
			if (T[i-1]>T[i])
			{
				swap(T[i-1], T[i]);
			}
		}
	}
	cout<<"Najwieksza: "<<T[n-1]<<endl;
}

int minimumValue(int T[]) 						//Młodsza Bliźniaczka
{
	for (int j=0; j<n; j++)
	{
		for (int i=1; i<n; i++)
		{
			if (T[i-1]>T[i])
			{
				swap(T[i-1], T[i]);
			}
		}
	}
	cout<<"Najmniejsza: "<<T[0]<<endl;
}

int printArray(int T[], int n) 					//Bobo
{
	cout<<"Tablica:"<<endl;
	for(int i=0; i<n; i++)
	{
		cout<<T[i]<<", ";
	}
	cout<<endl;	
}	

string saveArray(int T[], int n)				//Mlodszy
{
	fstream save;
    save.open("save.txt", ios::out);
    	for(int i=0; i<n; i++)
		{
			save<<T[i]<<" ";
		}
	save.close();
	cout<<"Zapisano."<<endl;   
}

string loadArray(int T[], int n)				//Starszy
{
	fstream save;
	save.open("save.txt", ios::in);
	if (save.good()==false)
	{
		cout<<"Nie znaleziono pliku zapisu.";
	}
	else
	{
		getline(save, tab);
		cout<<tab;
	}
	save.close();
}
